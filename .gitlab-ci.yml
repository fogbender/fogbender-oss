default:
  tags:
    - soc2

stages:
  - github_sync
  - build
  - test
  - format
  - bump
  - deploy

build:
  stage: build
  script:
    - nix build '.#fogbender'

test:
  stage: test
  script:
    - nix develop '.#ci' -c make db-start
    - nix develop '.#ci' -c bash -c "(cd server; link-deps.sh)"
    - nix develop '.#ci' -c make fog-test-no-deps-check
  after_script:
    - nix develop '.#ci' -c make db-stop

format:
  stage: format
  script:
    - echo Testing format...
    - nix develop '.#ci' -c yarn global add "prettier@2.8.3"
    - nix develop '.#ci' -c yarn fmt
    - nix develop '.#ci' -c make fog-format
    - echo 'Please run `nix develop -c make format` if you have any problems'
    - git diff --quiet || (git diff --stat; exit 1)

writing:
  stage: format
  script:
    - echo Testing copy...
    - git ls-files -z | xargs -0 sed -i -e 's/\[VERIFY\]/\[CHANGE THIS\]/g'
    - echo UGxlYXNlIGZpeCB0aGUgY29weSBhbmQgcmVtb3ZlIFtWRVJJRlldIG1hcmtzIGZyb20gdGhlIHRleHQK | base64 -d
    - git diff --quiet || (git diff; exit 1)

# Sync to GitHub on merge to main branch
sync_to_github:
  stage: github_sync
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "feature--sync-to-github"'
      allow_failure: true
  script:
    - echo Syncing to GitHub...
    # make sure we do not publish anything that contains the original repo's commits (because they had secrets in plaintext)
    - git merge-base --is-ancestor 543fd37c1197a4aaddef79592b4fdd417b6d7587 HEAD; if [ $? -eq 0 ]; then echo "Good"; else echo "Can only push from clean history"; exit 1; fi
    - ps -p $SSH_AGENT_PID > /dev/null || eval `ssh-agent -s`
    - echo "$GITHUB_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - git remote add github git@github.com:fogbender/fogbender.git || true
    - "[[ -f ~/.ssh/known_hosts ]] || ssh-keyscan github.com >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts"
    - git push github HEAD:refs/heads/"$CI_COMMIT_BRANCH"

# Automatically bump only on merge commits to main with server changes
bump:
  stage: bump
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TITLE =~ /^Merge branch/'
      changes:
        - "server/**/*"
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - nix develop ".#ci" -c make fog-bump
    - git remote set-url --push origin "git@gitlab.com:${CI_PROJECT_PATH}.git"
    - git push origin HEAD:main --tags

# Deploy to testing on new FOG-xxx tag
testing:
  stage: deploy
  environment:
    name: testing
    url: https://fogbender-test.com
  rules:
    - if: $CI_COMMIT_TAG =~ /^FOG-/
  script:
    - sudo -u deploy fog-deploy $(pwd) $CI_COMMIT_TAG test

# Deploy to staging manually
staging:
  stage: deploy
  environment:
    name: staging
    url: https://fogbender-stage.com
  rules:
    - if: $CI_COMMIT_TAG =~ /^FOG-/
      when: manual
      allow_failure: true
  script:
    - sudo -u deploy fog-deploy $(pwd) $CI_COMMIT_TAG stage

# Deploy to production manually
production:
  stage: deploy
  environment:
    name: production
    url: https://fogbender.com
  rules:
    - if: $CI_COMMIT_TAG =~ /^FOG-/
      when: manual
      allow_failure: true
  script:
    - sudo -u deploy fog-deploy $(pwd) $CI_COMMIT_TAG prod
