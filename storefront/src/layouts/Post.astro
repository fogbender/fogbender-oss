---
import type { CollectionEntry } from "astro:content";
import Layout from "../layouts/main.astro";
import Outro from "../ui/Blog/Outro.astro";
import CopyButton from "../ui/Blog/CopyButton.astro";
import PostHeader from "../ui/Blog/PostHeader.astro";
import { blogUrl } from "../pages/blog.astro";

export interface Props {
  content: CollectionEntry<"blog">["data"];
  linkedData: object;
}

const { content, linkedData } = Astro.props;
const { title, description } = content;
const { url: canonicalURL } = Astro;
const meta = {
  title,
  description,
  canonicalURL,
  image: content.socialImage,
};
---

<Layout meta={meta} linkedData={linkedData}>
  <div class="max-w-[900px]">
    <a
      href={blogUrl}
      class="hover:text-brand-red-500 font-prompt mt-11 ml-11 inline-block cursor-pointer text-lg font-light text-blue-700"
      >&#8592; All articles</a
    >
    <PostHeader content={content} />
    <div
      class:list={[
        "prose !prose-fog font-prompt",
        "prose-img:md:mx-12",
        "prose-h2:scroll-mt-20 prose-h2:md:mx-12 prose-h2:my-8 prose-h2:font-medium prose-h2:text-2xl",
        "prose-h3:scroll-mt-20 prose-h3:md:mx-12 prose-h3:my-8 prose-h3:font-normal prose-h3:text-xl",
        "prose-a:no-underline prose-a:break-words prose-a:font-light hover:prose-a:text-brand-red-500 prose-p:md:ml-12 prose-li:pl-1 prose-ul:pl-1 prose-ul:md:pl-5 prose-ol:pl-1 prose-ol:md:pl-5 prose-table:md:ml-8 max-w-full text-lg font-light",
      ]}
    >
      <slot />
      <template id="copy-button"><CopyButton /></template>
    </div>
    <Outro tweet={{ title, href: Astro.url.toString() }} />
  </div>
</Layout>
<style>
  div :global(.prose img) {
    cursor: zoom-in;
  }
  div :global(.prose > ul),
  div :global(.prose > ol) {
    @apply ml-5 sm:ml-10 md:ml-14;
  }
  div :global(.prose ul ::marker) {
    content: "ãƒ»";
  }
  div :global(.prose li p) {
    display: contents;
  }
  div :global(.prose p:has(> img)) {
    margin-left: 0;
  }
  div :global(.prose :not(pre) > code)::before,
  div :global(.prose :not(pre) > code)::after {
    content: none;
  }
</style>
<script>
  // https://www.roboleary.net/2022/01/13/copy-code-to-clipboard-blog.html
  if (navigator.clipboard) {
    let copyButton = document.querySelector("#copy-button") as HTMLTemplateElement;
    let blocks = document.querySelectorAll("pre.astro-code");
    blocks.forEach(block => {
      const container = document.createElement("div");
      container.classList.add("relative");
      let button = document.createElement("button");
      const icon = copyButton.content.cloneNode(true);
      button.appendChild(icon);
      button.className =
        "flex items-center justify-center absolute top-2 right-2 h-8 w-8 bg-white rounded-lg fog:box-shadow-s text-black hover:text-dusk";
      button.style.animationIterationCount = "1";
      button.addEventListener("click", () => {
        const effects = ["animate-bounce"];
        if (button.classList.contains(effects[0])) return;
        button.classList.add(...effects);
        if (block.textContent) {
          navigator.clipboard.writeText(block.textContent);
        }
        setTimeout(() => {
          button.classList.remove(...effects);
        }, 1300);
      });
      block.appendChild(button);
      block.parentNode?.insertBefore(container, block);
      container.appendChild(block);
    });
  }
  document.querySelector("main .prose")?.addEventListener("click", e => {
    if (e.target instanceof HTMLImageElement) {
      e.stopPropagation();
      e.preventDefault();
      window.open(e.target.src, "_blank");
    }
  });
</script>
