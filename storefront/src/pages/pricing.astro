---
import Layout from "../layouts/main.astro";
import Page from "../layouts/Page.astro";
import PageTitle from "../ui/landing/PageTitle.astro";
import PricingCard from "../ui/landing/PricingCard.astro";

import { IconGithub } from "../../../client/src/shared/components/IntegrationIcons";

const title = "Pricing";
---

<Layout meta={{ title: "Pricing" }}>
  <Page>
    <PageTitle title={title} />
    <div class="max-w-[51rem] flex justify-center">
      <div>
        <div class="flex flex-col"></div>

        <div class="w-full sm:w-[39rem] xl:w-[51rem] flex flex-col gap-6">
          <span class="font-medium text-lg"
            >How many seats for internal messaging and read-only access to customer conversations?</span
          >
          <div class="flex gap-4 items-center">
            <input class="w-14" type="number" value="10" id="readerSliderValue" />
            <input
              type="range"
              min="0"
              max="1000"
              value="10"
              class="slider readers"
              id="readerSlider"
            />
          </div>

          <span class="font-medium text-lg">How many seats for customer-facing agents?</span>
          <div class="flex gap-4 items-center">
            <input class="w-14" type="number" value="2" id="agentSliderValue" />
            <input
              type="range"
              min="0"
              max="100"
              value="2"
              class="slider agents"
              id="agentSlider"
            />
          </div>

          <PricingCard
            title="Hosted"
            benefits={[
              "Unlimited end-users",
              "Anonymous user (visitor) chat widget",
              "Authenticated user chat widget",
              "Team-to-team chat widget",
              "Issue tracker integrations",
              "Slack and Microsoft Teams integrations",
              "SOC 2 certificate",
              "SSO",
            ]}
          >
            <div slot="price">
              <span></span>
              $<span id="price">0</span> per month
            </div>
          </PricingCard>

          {
            /*
          <span class="">
            Fogbender is free and open-source software &mdash; to host your own, <a
              class="hover:text-brand-red-500 text-blue-700"
              href="https://github.com/fogbender/fogbender"
              target="_blank">clone our <IconGithub className="w-4 inline-block" /> GitHub repo</a
            >
          </span>
          */
          }
        </div>
      </div>
    </div>
  </Page>
</Layout>

<style>
  .slider {
    width: 100%; /* Full-width */
    opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
    -webkit-transition: 0.2s; /* 0.2 seconds transition on hover */
    transition: opacity 0.2s;
  }

  .readers {
    accent-color: rgb(104, 0, 243);
  }

  .agents {
    accent-color: rgb(251, 21, 91);
  }
</style>

<script>
  const configureSlider = (
    sliderId: string,
    sliderValueId: string,
    onChange?: (x: number) => void
  ) => {
    const slider = document.getElementById(sliderId) as HTMLInputElement;
    const asNumber = document.getElementById(sliderValueId) as HTMLInputElement;

    if (asNumber) {
      addEventListener("load", () => {
        asNumber.value = slider.value;
      });

      asNumber.addEventListener("change", e => {
        slider.value = (e.target as HTMLInputElement).value;

        if (onChange) {
          onChange(Number(slider.value));
        }
      });
    }

    if (slider) {
      slider.addEventListener("change", e => {
        asNumber.value = (e.target as HTMLInputElement).value;
      });

      slider.addEventListener("input", e => {
        asNumber.value = (e.target as HTMLInputElement).value;
        asNumber.dispatchEvent(new Event("change"));
      });
    }
  };

  const price = document.getElementById("price");

  configureSlider("readerSlider", "readerSliderValue");
  configureSlider("agentSlider", "agentSliderValue", x => {
    if (price) {
      price.innerText = x > 2 ? `${(x - 2) * 25}` : "0";
    }
  });
</script>
